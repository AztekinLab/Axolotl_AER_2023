par(mfrow = c(1,2))
#
subtree.5 <- extract.clade(tree, node = '**95')
plot(subtree.5)
edgelabels(round(subtree.5$edge.length,2), frame = 'none', adj = c(0.5,-0.3), font = .3, col ='red') # add edge.length (distance)
nodelabels(subtree.5$node.label, font = .3) # add node label
axisPhylo(backward = F) # adds a scaled axis for the tree
plotBreakLongEdges(subtree.5, n = 3)
edgelabels(round(subtree.5$edge.length,2), frame = 'none', adj = c(0.5,-0.3), font = .3, col ='red') # add edge.length (distance)
nodelabels(subtree.5$node.label, font = .3) # add node label
axisPhylo(backward = F) # adds a scaled axis for the tree
par(mfrow = c(1,2))
#
subtree.5 <- extract.clade(tree, node = '**94')
plot(subtree.5)
edgelabels(round(subtree.5$edge.length,2), frame = 'none', adj = c(0.5,-0.3), font = .3, col ='red') # add edge.length (distance)
nodelabels(subtree.5$node.label, font = .3) # add node label
axisPhylo(backward = F) # adds a scaled axis for the tree
plotBreakLongEdges(subtree.5, n = 3)
par(mfrow = c(1,2))
#
subtree.5 <- extract.clade(tree, node = '**38')
plot(subtree.5)
edgelabels(round(subtree.5$edge.length,2), frame = 'none', adj = c(0.5,-0.3), font = .3, col ='red') # add edge.length (distance)
nodelabels(subtree.5$node.label, font = .3) # add node label
axisPhylo(backward = F) # adds a scaled axis for the tree
plotBreakLongEdges(subtree.5, n = 3)
edgelabels(round(subtree.5$edge.length,2), frame = 'none', adj = c(0.5,-0.3), font = .3, col ='red') # add edge.length (distance)
nodelabels(subtree.5$node.label, font = .3) # add node label
axisPhylo(backward = F) # adds a scaled axis for the tree
par(mfrow = c(2, 1))
#
subtree.5 <- extract.clade(tree, node = '**38')
plot(subtree.5)
edgelabels(round(subtree.5$edge.length,2), frame = 'none', adj = c(0.5,-0.3), font = .3, col ='red') # add edge.length (distance)
nodelabels(subtree.5$node.label, font = .3) # add node label
axisPhylo(backward = F) # adds a scaled axis for the tree
plotBreakLongEdges(subtree.5, n = 3)
edgelabels(round(subtree.5$edge.length,2), frame = 'none', adj = c(0.5,-0.3), font = .3, col ='red') # add edge.length (distance)
nodelabels(subtree.5$node.label, font = .3) # add node label
axisPhylo(backward = F) # adds a scaled axis for the tree
par(mfrow = c(2, 1))
#
subtree.5 <- extract.clade(tree, node = '**38')
plot(subtree.5)
edgelabels(round(subtree.5$edge.length,2), frame = 'none', adj = c(0.5,-0.3), font = .3, col ='red') # add edge.length (distance)
axisPhylo(backward = F) # adds a scaled axis for the tree
plotBreakLongEdges(subtree.5, n = 3)
edgelabels(round(subtree.5$edge.length,2), frame = 'none', adj = c(0.5,-0.3), font = .3, col ='red') # add edge.length (distance)
axisPhylo(backward = F) # adds a scaled axis for the tree
plot(subtree.3, font = .01, show.node.label = TRUE)
nodepath(subtree.3, from='**6', to='**9')
par(mfrow = c(2, 1))
#
subtree.5 <- extract.clade(tree, node = '**38')
plot(subtree.5)
edgelabels(round(subtree.5$edge.length,2), frame = 'none',
adj = c(0.5,-0.3), font = .01, col ='red') # add edge.length (distance)
axisPhylo(backward = F) # adds a scaled axis for the tree
title('Before branches shortening')
plotBreakLongEdges(subtree.5, n = 3)
edgelabels(round(subtree.5$edge.length[subtree.5$edge.length > 0.25],2), frame = 'none',
adj = c(0.5,-0.3), font = .01, col ='red') # add edge.length (distance)
axisPhylo(backward = F) # adds a scaled axis for the tree
title('After branches shortening')
round(subtree.5$edge.length[subtree.5$edge.length > 0.25],2)
library(Seurat)
library(ggplot2)
library(RColorBrewer)
library(patchwork)
source("./0.scripts/dot_plot_combine_sp.r")
library(Seurat)
library(ggplot2)
library(RColorBrewer)
library(patchwork)
source("../0.scripts/dot_plot_combine_sp.r")
library(Seurat)
library(ggplot2)
library(RColorBrewer)
library(patchwork)
source("../0.scripts/dot_plot_combine_sp.r")
AUROC.scores <- read.csv('./AUROC_HVG_MN_303.csv')
getwd()
setwd('Users/jzhong/Desktop/Desktop–SV-96M-002/EPFL/project/axolotl_aer_final/rmd_pl_figs')
setwd('/Users/jzhong/Desktop/Desktop–SV-96M-002/EPFL/project/axolotl_aer_final/rmd_pl_figs')
setwd('Fig1/')
AUROC.scores <- read.csv('./AUROC_HVG_MN_303.csv')
AUROC.scores <- read.csv('../data/AUROC_HVG_MN_303.csv')
AUROC.scores <- read.csv('../data/Fig1_data/AUROC_HVG_MN_303.csv')
source('/Users/jzhong/Desktop/Desktop–SV-96M-002/EPFL/project/axolotl_aer_final/rmd_pl_figs/pl_MN_utils.r')
plot_AUROC_heatmap(AUROC.scores)
AUROC.scores
AUROC.scores <- read.csv('../data/Fig1_data/AUROC_HVG_MN_303.csv', row.names = 1)
source('/Users/jzhong/Desktop/Desktop–SV-96M-002/EPFL/project/axolotl_aer_final/rmd_pl_figs/pl_MN_utils.r')
plot_AUROC_heatmap(AUROC.scores)
df <- readRDS("../data/Fig1_data/AUCell_scores.rds")
df <- df[df$CellType2 != "Delected", ]
df_mean <- df %>%
group_by(sp, CellType2) %>%
summarise(mean = mean(sig))
df_mean_wide <- spread(df_mean, key = sp, value = mean)
library(Seurat)
library(ggplot2)
library(RColorBrewer)
library(patchwork)
library(tidyr)
source("../0.scripts/dot_plot_combine_sp.r")
df <- readRDS("../data/Fig1_data/AUCell_scores.rds")
df <- df[df$CellType2 != "Delected", ]
df_mean <- df %>%
group_by(sp, CellType2) %>%
summarise(mean = mean(sig))
df_mean_wide <- spread(df_mean, key = sp, value = mean)
rn <- df_mean_wide$CellType2
df_mean_wide <- df_mean_wide[, -1]
ComplexHeatmap::pheatmap(df_mean_wide[rn %in% c("AER", "BasalEctoderm"), ],
cluster_rows = FALSE, cluster_cols = FALSE,
labels_row = rn[rn %in% c("AER", "BasalEctoderm")],
colorRampPalette(c("white", "firebrick3"))(10),
na_col = "grey"
)
setwd('../Fig2/')
visium <- readRDS('../data/axolotl_visium_anno.rds')
cols_ <- c(rep("lightgrey", 3), "#1B9E77", rep("lightgrey", 2), "#F0027F")
names(cols_) <- names(cols2)
levels(visium$CellType2)
cols_ <- c(rep("lightgrey", 3), "#1B9E77", rep("lightgrey", 2), "#F0027F")
names(cols_) <- levels(visium$CellType2)
p_anno <- SpatialDimPlot(visium,
# cells.highlight = WhichCells(visium, expression = CellType2 %in% c("AEC", 'Blastema')),
group.by = "CellType2", label = FALSE,
cols = cols_,
image.alpha = 0
) + NoLegend() + theme(aspect.ratio = 1 / 2)
cols_ <- c(rep("lightgrey", 3), "#1B9E77", rep("lightgrey", 2), "#F0027F")
names(cols_) <- levels(visium$CellType2)
SpatialDimPlot(visium,
group.by = "CellType2", label = FALSE,
cols = cols_,
image.alpha = 0
) + NoLegend() + theme(aspect.ratio = 1 / 2)
cols_
SpatialDimPlot(visium,
group.by = "CellType2", label = FALSE,
image.alpha = 0
) + NoLegend() + theme(aspect.ratio = 1 / 2)
visium$CellType2
SpatialDimPlot(visium)
SpatialDimPlot(visium,
group.by = "CellType2")
visium$CellType2
unique(visium$CellType2)
visium <- readRDS('../data/axolotl_visium_anno.rds')
cols_ <- c(rep("lightgrey", 3), "#1B9E77", rep("lightgrey", 2), "#F0027F")
names(cols_) <- levels(visium$CellType2)
SpatialDimPlot(visium,
group.by = "CellType2", label = FALSE,
cols = cols_,
image.alpha = 0
) + NoLegend() + theme(aspect.ratio = 1 / 2)
col <- rev(brewer.pal(9, "RdBu"))
genes <- c("KRT17.1", "FN1", "MSX2", "KAZALD1")
p_list <- lapply(genes, function(x) {
SpatialFeaturePlot(visium, features = x, image.alpha = 0) +
scale_fill_gradientn(colours = col) +
theme(
aspect.ratio = 1 / 2,
legend.position = "right",
plot.margin = margin(0, 0, 0, 0, "cm"),
legend.key.size = unit(.3, "cm")
)
})
wrap_plots(p_list, ncol = 1)
cols_ <- c(rep("lightgrey", 3), "#1B9E77", rep("lightgrey", 2), "#F0027F")
names(cols_) <- levels(visium$CellType2)
SpatialDimPlot(visium,
group.by = "CellType2", label = FALSE,
cols = cols_,
image.alpha = 0
) + NoLegend() + theme(aspect.ratio = 1 / 2)
cols_ <- c(rep("lightgrey", 3), "#1B9E77", rep("lightgrey", 2), "#F0027F")
names(cols_) <- levels(visium$CellType2)
SpatialDimPlot(visium,
group.by = "CellType2", label = FALSE,
#cols = cols_,
image.alpha = 0
) + NoLegend() + theme(aspect.ratio = 1 / 2)
SpatialDimPlot(visium,
group.by = "CellType2")
cols_ <- c(rep("lightgrey", 3), "#1B9E77", rep("lightgrey", 2), "#F0027F")
names(cols_) <- levels(visium$CellType2)
SpatialDimPlot(visium,
#group.by = "CellType2",
label = FALSE,
#cols = cols_,
image.alpha = 0
) + NoLegend() + theme(aspect.ratio = 1 / 2)
cols_ <- c(rep("lightgrey", 3), "#1B9E77", rep("lightgrey", 2), "#F0027F")
names(cols_) <- levels(visium$CellType2)
SpatialDimPlot(visium,
#group.by = "CellType2",
label = FALSE,
cols = cols_,
image.alpha = 0
) + NoLegend() + theme(aspect.ratio = 1 / 2)
visium@active.ident
all(visium@active.ident == visium$CellType2)
Idents(visium) <- 'CellType2'
cols_ <- c(rep("lightgrey", 3), "#1B9E77", rep("lightgrey", 2), "#F0027F")
names(cols_) <- levels(visium$CellType2)
SpatialDimPlot(visium,
#group.by = "CellType2",
label = FALSE,
cols = cols_,
image.alpha = 0
) + NoLegend() + theme(aspect.ratio = 1 / 2)
cols_ <- c(rep("lightgrey", 3), "#1B9E77", rep("lightgrey", 2), "#F0027F")
names(cols_) <- levels(visium$CellType2)
SpatialDimPlot(visium,
group.by = "CellType2",
label = FALSE,
cols = cols_,
image.alpha = 0
) + NoLegend() + theme(aspect.ratio = 1 / 2)
cols_ <- c(rep("lightgrey", 3), "#1B9E77", rep("lightgrey", 2), "#F0027F")
names(cols_) <- levels(visium$CellType2)
SpatialDimPlot(visium,
label = FALSE,
cols = cols_,
image.alpha = 0
) + NoLegend() + theme(aspect.ratio = 1 / 2)
functional_list <- readRDS("../../../limbdev/0.gene.list/functional/functional_list_updateAxolotl_updateEctoderm_updateNames.rds")
sigs <- functional_list$Ectoderm$signalling$Axolotl$gene_name
markers <- sort(functional_list$Ectoderm$marker_short$Axolotl$gene_name)
markers <- markers[-c(4, 5)] # delete CDH1
markers <- setdiff(markers, sigs)
deg <- read.table("AER_findmarker.txt", header = TRUE)
deg <- deg[grep("^HB", deg$gene, invert = T), ]
deg <- head(deg[order(deg$avg_log2FC, decreasing = TRUE), ]$gene, 20)
save(sigs, markers, deg, file = 'Fig2_supp.rdata')
head(seurat)
seu <- readRDS('axo_AER_DEG_top500_Axolotl_ST54_reclustered.rds')
genelist <- functional_list$Ectoderm$marker$Axolotl$gene_name
genes_org <- genelist[[x]]
seu <- readRDS('axo_AER_DEG_top500_Axolotl_ST54_reclustered.rds')
genelist <- functional_list$Ectoderm$marker$Axolotl$gene_name
genes_org <- genelist
DefaultAssay(seu) <- "RNA"
genes <- intersect(genes_org, rownames(seu))
genes <- genes[rowSums(seu@assays$RNA@data[genes, ]) > 0]
len_gene <- length(genes)
amex <- grepl("^AMEX", genes)
genes[!amex] <- gsub("\\.[0-9]+$", "", genes[!amex])
genes <- unique(Axolotl_fun(genes, seu@assays$RNA@data, colnames(seu)[seu$comp == "CT-AER"]))
genes_org <- genelist
DefaultAssay(seu) <- "RNA"
genes <- intersect(genes_org, rownames(seu))
genes <- genes[rowSums(seu@assays$RNA@data[genes, ]) > 0]
len_gene <- length(genes)
amex <- grepl("^AMEX", genes)
genes[!amex] <- gsub("\\.[0-9]+$", "", genes[!amex])
genes <- unique(Axolotl_fun(genes, seu@assays$RNA@data, colnames(seu)[seu$comp == "CT-AER"]))
source('../0.scripts/dotplot_fromTOM.r')
genes_org <- genelist
DefaultAssay(seu) <- "RNA"
genes <- intersect(genes_org, rownames(seu))
genes <- genes[rowSums(seu@assays$RNA@data[genes, ]) > 0]
len_gene <- length(genes)
amex <- grepl("^AMEX", genes)
genes[!amex] <- gsub("\\.[0-9]+$", "", genes[!amex])
genes <- unique(Axolotl_fun(genes, seu@assays$RNA@data, colnames(seu)[seu$comp == "CT-AER"]))
seu <- ScaleData(seu, genes)
p <- DoHeatmap(seu, genes, group.by = "comp", slot = "data")
library(Seurat)
library(ComplexHeatmap)
library(ggplot2)
seu <- readRDS('axo_AER_DEG_top500_Axolotl_ST54_reclustered.rds')
source('../0.scripts/dotplot_fromTOM.r')
functional_list <- readRDS('../0.gene.list/functional_list_updateAxolotl_updateEctoderm_updateNames.rds')
genelist <- functional_list$Ectoderm$marker$Axolotl$gene_name
genes_org <- genelist
DefaultAssay(seu) <- "RNA"
genes <- intersect(genes_org, rownames(seu))
genes <- genes[rowSums(seu@assays$RNA@data[genes, ]) > 0]
len_gene <- length(genes)
amex <- grepl("^AMEX", genes)
genes[!amex] <- gsub("\\.[0-9]+$", "", genes[!amex])
genes <- unique(Axolotl_fun(genes, seu@assays$RNA@data, colnames(seu)))
seu <- ScaleData(seu, genes)
p <- DoHeatmap(seu, genes, group.by = "CellType2", slot = "data")
z <- na.omit(p$data)
z_wide <- reshape2::dcast(z, Feature ~ Cell, value.var = "Expression")
rownames(z_wide) <- gsub('\\.[0-9]+$','', z_wide[, 1])
z_wide <- z_wide[, -1]
z_wide <- t(scale(t(z_wide)))
ha <- HeatmapAnnotation(
CellType2 = as.character(seu$CellType2[colnames(z_wide)]),
col = list(CellType2 = c("AER" = "#F0027F", "CT" = "#A6CEE3"))
)
Heatmap(z_wide,
show_column_names = FALSE, show_row_names = FALSE,
column_split = as.character(seu$CellType2[colnames(z_wide)]),
top_annotation = ha,
clustering_distance_rows = "euclidean",
clustering_method_rows = "ward.D2",
clustering_distance_columns = "euclidean",
clustering_method_columns = "ward.D2",
row_dend_reorder = TRUE,
column_dend_reorder = TRUE,
show_row_dend = FALSE,
col = circlize::colorRamp2(c(-3, 0, 3), c("#2166ac", "white", "#b2182b")),
use_raster = TRUE
)
vis <- readRDS('../data/axolotl_visium_anno.rds')
genes <- c('KRT5','KRT17','LUM','DPT')
p_sc <- lapply(genes, function(i){
FeaturePlot(seu, i, order = TRUE, cols = c("lightgrey", "#B2182B"))
})
p_sc <- wrap_plots(p_sc, ncol = 1)
genes <- c('KRT5.2','KRT17.1','LUM.1','DPT')
p_vis <- lapply(genes, function(i){
p1 <- SpatialFeaturePlot(vis, features = i, image.alpha = 0) +
scale_fill_gradientn(colours = col) +
theme(
aspect.ratio = 1 / 2,
legend.position = "right",
plot.margin = margin(0, 0, 0, 0, "cm"),
legend.key.size = unit(.3, "cm")
)
p2 <- VlnPlot(vis, i,
group.by = "CellType2",
idents = c("CT", "Blastema", "AEC"),
pt.size = 0,
cols = cols2
) + NoLegend() + theme(aspect.ratio = 1, plot.title = element_blank())
wrap_plots(p1, p2, nrow = 1, widths = c(2, 1))
})
p_vis <- wrap_plots(p_vis, ncol = 1)
p_vis
genes <- c('KRT5','KRT17','LUM','DPT')
p_sc <- lapply(genes, function(i){
FeaturePlot(seu, i, order = TRUE, cols = c("lightgrey", "#B2182B"))
})
p_sc <- wrap_plots(p_sc, ncol = 1)
genes <- c('KRT5.2','KRT17.1','LUM.1','DPT')
p_vis <- lapply(genes, function(i){
p1 <- SpatialFeaturePlot(vis, features = i, image.alpha = 0) +
scale_fill_gradientn(colours = col) +
theme(
aspect.ratio = 1 / 2,
legend.position = "right",
plot.margin = margin(0, 0, 0, 0, "cm"),
legend.key.size = unit(.3, "cm")
)
p2 <- VlnPlot(vis, i,
group.by = "CellType2",
idents = c("CT", "Blastema", "AEC"),
pt.size = 0,
cols = rev(brewer.pal(9, "RdBu"))
) + NoLegend() + theme(aspect.ratio = 1, plot.title = element_blank())
wrap_plots(p1, p2, nrow = 1, widths = c(2, 1))
})
p_vis <- wrap_plots(p_vis, ncol = 1)
p_sc+ p_vis
p_sc
p_vis
levels(vis$CellType2)
cols2 <- c(
brewer.pal(3, "Paired"),
brewer.pal(3, "Dark2"),
"#F0027F"
)
names(cols2) <- levels(vis$CellType2)
p_sc+ p_vis
wrap_plots(p_sc, p_vis, nrow = 1)
wrap_plots(p_sc, p_vis, nrow = 1, widths = c(1, 2))
dev.off()
wrap_plots(p_sc, p_vis, nrow = 1, widths = c(1, 2))
wrap_plots(p_sc, p_vis, nrow = 1, widths = c(1, 2))
p_vis <- lapply(genes, function(i){
p1 <- SpatialFeaturePlot(vis, features = i, image.alpha = 0) +
scale_fill_gradientn(colours = rev(brewer.pal(9, "RdBu"))) +
theme(
aspect.ratio = 1 / 2,
legend.position = "top",
plot.margin = margin(0, 0, 0, 0, "cm"),
legend.key.size = unit(.3, "cm")
)
p2 <- VlnPlot(vis, i,
group.by = "CellType2",
idents = c("CT", "Blastema", "AEC"),
pt.size = 0,
cols = cols2
) + NoLegend() + theme(aspect.ratio = 1, plot.title = element_blank())
wrap_plots(p1, p2, nrow = 1, widths = c(2, 1))
})
p_vis <- wrap_plots(p_vis, ncol = 1)
wrap_plots(p_sc, p_vis, nrow = 1, widths = c(1, 2))
dev.off()
wrap_plots(p_sc, p_vis, nrow = 1, widths = c(1, 2))
genes <- c('KRT5.2','KRT17','LUM','DPT')
p_sc <- lapply(genes, function(i){
FeaturePlot(seu, i, order = TRUE, cols = c("lightgrey", "#B2182B")) + NoAxes()
})
p_sc <- wrap_plots(p_sc, ncol = 1)
genes <- c('KRT5.2','KRT17.1','LUM.1','DPT')
p_vis <- lapply(genes, function(i){
p1 <- SpatialFeaturePlot(vis, features = i, image.alpha = 0) +
scale_fill_gradientn(colours = rev(brewer.pal(9, "RdBu"))) +
theme(
aspect.ratio = 1 / 2,
legend.position = "top",
plot.margin = margin(0, 0, 0, 0, "cm"),
legend.key.size = unit(.3, "cm")
)
p2 <- VlnPlot(vis, i,
group.by = "CellType2",
idents = c("CT", "Blastema", "AEC"),
pt.size = 0,
cols = cols2
) + NoLegend() +
theme(aspect.ratio = 1, plot.title = element_blank())
wrap_plots(p1, p2, nrow = 1, widths = c(2, 1))
})
p_vis <- wrap_plots(p_vis, ncol = 1)
wrap_plots(p_sc, p_vis, nrow = 1, widths = c(1, 2))
wrap_plots(p_sc, p_vis, nrow = 1, widths = c(1, 2))
wrap_plots(p_sc, p_vis, nrow = 1, widths = c(1, 4))
p_vis <- lapply(genes, function(i){
p1 <- SpatialFeaturePlot(vis, features = i, image.alpha = 0) +
scale_fill_gradientn(colours = rev(brewer.pal(9, "RdBu"))) +
theme(
aspect.ratio = 1 / 2,
legend.position = "right"
)
p2 <- VlnPlot(vis, i,
group.by = "CellType2",
idents = c("CT", "Blastema", "AEC"),
pt.size = 0,
cols = cols2
) + NoLegend() +
theme(aspect.ratio = 1, plot.title = element_blank())
wrap_plots(p1, p2, nrow = 1, widths = c(2, 1))
})
p_vis <- wrap_plots(p_vis, ncol = 1)
wrap_plots(p_sc, p_vis, nrow = 1, widths = c(1, 4))
wrap_plots(p_sc, p_vis, nrow = 1, widths = c(1, 2))
names(seu_list)
f
f <- c('mouse_AER_DEG_top500_Mouse_E105_reclustered.rds',
'human_AER_DEG_top500_Human_CS13_reclustered.rds',
'chick_AER_DEG_top500_Chicken_E45_reclustered.rds',
'axo_AER_DEG_top500_Axolotl_ST52_reclustered.rds',
'frog_AER_DEG_top500_Frog_NF51_reclustered.rds',
'axo_AER_DEG_top500_Axolotl_reg_reclustered.rds',
'frog_AER_DEG_top500_Frog_reg_reclustered.rds')
f
setwd('../data/Fig3_data/sup/')
setwd('../../../Fig3/')
list(
rep(c("#A6CEE3", "#F0027F"), 5),
rep(c("#1a5e82", "#a20559"), 5)
)
rep(c("#A6CEE3", "#F0027F"), 5)
list(rep(c("#A6CEE3", "#F0027F"), 5))
dev <- c("#A6CEE3", "#F0027F")
reg <- c("#1a5e82", "#a20559")
pl_cols <- list(
rep(list(dev),5),
rep(list(reg),5),
)
pl_cols <- list(
rep(list(dev),5),
rep(list(reg),5)
)
pl_cols
pl_cols <-c(
rep(list(dev),5),
rep(list(reg),5)
)
pl_cols
p_list <- lapply(1:length(seu_list), function(x){
seu <- seu_list[[x]]
DimPlot(seu, group.by = 'CellType2', cols = pl_cols[[x]]) + NoLegend() + NoAxes() +
labs(title = seu$orig.ident[1])
})
f <- c('../data/Fig3_data/sup/mouse_AER_DEG_top500_Mouse_E105_reclustered.rds',
'../data/Fig3_data/sup/human_AER_DEG_top500_Human_CS13_reclustered.rds',
'../data/Fig3_data/sup/chick_AER_DEG_top500_Chicken_E45_reclustered.rds',
'../data/Fig3_data/sup/axo_AER_DEG_top500_Axolotl_ST52_reclustered.rds',
'../data/Fig3_data/sup/frog_AER_DEG_top500_Frog_NF51_reclustered.rds',
'../data/Fig3_data/sup/axo_AER_DEG_top500_Axolotl_reg_reclustered.rds',
'../data/Fig3_data/sup/frog_AER_DEG_top500_Frog_reg_reclustered.rds')
seu_list <-lapply(f, readRDS)
dev <- c("#A6CEE3", "#F0027F")
reg <- c("#1a5e82", "#a20559")
pl_cols <-c(
rep(list(dev),5),
rep(list(reg),2)
)
p_list <- lapply(1:length(seu_list), function(x){
seu <- seu_list[[x]]
DimPlot(seu, group.by = 'CellType2', cols = pl_cols[[x]]) + NoLegend() + NoAxes() +
labs(title = seu$orig.ident[1])
})
lay <- '
ABC
DE#
FG#'
wrap_plots(p_list, design = lay)
3199-10
3189/2
