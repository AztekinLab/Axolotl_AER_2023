column_split = meta_df$CellType2[match(colnames(mat), rownames(meta_df))],
top_annotation = ha,
column_title = NULL,
cluster_rows = FALSE,
cluster_columns = FALSE,
col = circlize::colorRamp2(c(-2, 0, 2), c("#67a9cf", "white", "#b2182b")),
use_raster = TRUE
)
})
draw(Reduce(`+`, p_list))
head(df_meta)
head(meta_df, 2)
names(mat_list) <- c('Axolotl_ST50', 'Axolotl_ST52', 'Axolotl_ST54')
p_list <- lapply(1:length(mat_list), function(x) {
mat <- mat_list[[x]]
ha <- HeatmapAnnotation(
CellType2 = meta_df$CellType2[match(colnames(mat), rownames(meta_df))],
col = list(CellType2 = cols2),
show_legend = TRUE,
show_annotation_name = FALSE
)
Heatmap(mat,
name = 'Expression',
show_column_names = FALSE,
row_names_side = 'left',
# column_split = factor(
#   meta_df$CellType2[match(colnames(mat), rownames(meta_df))],
#   levels = c(
#     'CT',
#     'BasalEctoderm',
#     'AER',
#     'DiffEctoderm',
#     'Goblet',
#     'Muscle',
#     'Blood',
#     'Immune',
#     'Endo',
#     "Pericyte"
#   )
# ),
column_split = meta_df$CellType2[match(colnames(mat), rownames(meta_df))],
top_annotation = ha,
column_title = names(mat_list)[x],
cluster_rows = FALSE,
cluster_columns = FALSE,
col = circlize::colorRamp2(c(-2, 0, 2), c("#67a9cf", "white", "#b2182b")),
use_raster = TRUE
)
})
draw(Reduce(`+`, p_list))
saveRDS(mat_list, file = 'mat_list.rds')
cols2
levels(meta_df$CellType2)
unique(meta_df$orig.ident)
x <- 'Axolotl_ST50'
cells <- rownames(meta_df)[meta_df$orig.ident == x]
cells
mat <- mat_list[[x]][genes,colnames(mat) %in% cells]
mat_list[[x]]
## vlnplot for most specific markers
genes <- c("DR999-PMT21178", "VWA2")
## vlnplot for most specific markers
genes <- c("DR999-PMT21178", "VWA2")
unique(meta_df$orig.ident)
p_list <- lapply(unique(meta_df$orig.ident), function(x) {
cells <- rownames(meta_df)[meta_df$orig.ident == x]
mat <- mat_list[[x]][genes,colnames(mat) %in% cells]
p <- ggplot()
p <- VlnPlot(seu, genes,
group.by = "CellType2",
cols = cols2, ncol = 2
) & NoLegend()
p
})
mat_list[[x]][genes,colnames(mat) %in% cells]
mat <- mat_list[[x]]
mat <- mat[genes,colnames(mat) %in% cells]
mat
mat_long <- melt(mat)
head(mat_long)
mat_long$CellType2 <- meta_df$CellType2[cells]
mat_long$CellType2 <- meta_df$CellType2[mat_long$Var2]
p <- ggplot(mat_long, aes(Var1, CellType2, fill = CellType2)) + geom_violin()
p
p <- ggplot(mat_long[mat_long$Var1 == 'VWA2',], aes(Var1, CellType2, fill = CellType2)) + geom_violin()
p
ggplot(mat_long[mat_long$Var1 == 'VWA2',],
aes(Var1, CellType2, fill = CellType2, group = CellType2)) + geom_violin()
ggplot(mat_long[mat_long$Var1 == 'VWA2',],
aes(Var1, CellType2, fill = CellType2, group = CellType2)) + geom_violin()
ggplot(mat_long[mat_long$Var1 == 'VWA2',],
aes(CellType2,Var1,  fill = CellType2, group = CellType2)) + geom_violin()
ggplot(mat_long[mat_long$Var1 == 'VWA2',],
aes(CellType2,Var1,  fill = CellType2, group = CellType2)) + geom_violin()
View(df_sub)
View(mat_long)
ggplot(mat_long[mat_long$Var1 == 'VWA2',],
aes(CellType2,value,  fill = CellType2, group = CellType2)) +
geom_violin()
ggplot(mat_long[mat_long$Var1 == 'VWA2',],
aes(CellType2,value,  fill = CellType2, group = CellType2)) +
geom_violin()
ggplot(mat_long[mat_long$Var1 == 'VWA2',],
aes(CellType2,value,  fill = CellType2, group = CellType2)) +
geom_violin() + theme_classic() + scale_fill_manual(values = cols)
ggplot(mat_long[mat_long$Var1 == 'VWA2',],
aes(CellType2,value,  fill = CellType2, group = CellType2)) +
geom_violin() + theme_classic() + scale_fill_manual(values = cols2)
ggplot(mat_long[mat_long$Var1 == 'VWA2',],
aes(CellType2,value,  fill = CellType2, group = CellType2)) +
geom_violin() + theme_classic() +
scale_fill_manual(values = cols2) + labs(title = 'VWA2') +
theme(legend.position = 'none')
ggplot(mat_long[mat_long$Var1 == 'VWA2',],
aes(CellType2,value,  fill = CellType2, group = CellType2)) +
geom_violin() + theme_classic() +
scale_fill_manual(values = cols2) + labs(title = 'VWA2') +
theme(legend.position = 'none')
vln_exp <- readRDS('supp_vln.rds')
head(vln_exp)
p_list <- lapply(unique(vln_exp$orig.ident), function(stage) {
p_stage <- lapply(c("DR999-PMT21178", "VWA2"), function(gene){
dat <- vln_exp[vln_exp$orig.ident == stage, ]
ggplot(dat, aes(CellType2, gene,  fill = CellType2, group = CellType2)) +
geom_violin() + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = 'VWA2') +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'))
})
wrap_plots(p_stage, nrow = 1)
})
wrap_plots(p_list, ncol = 1)
## vlnplot for most specific markers
genes <- c("DR999-PMT21178", "VWA2")
vln_exp <- readRDS('supp_vln.rds')
unique(meta_df$orig.ident)
p_list <- lapply(unique(vln_exp$orig.ident), function(stage) {
p_stage <- lapply(c("DR999-PMT21178", "VWA2"), function(gene){
dat <- vln_exp[vln_exp$orig.ident == stage, ]
ggplot(dat, aes(CellType2, gene,  fill = CellType2, group = CellType2)) +
geom_violin() + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = gene) +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'))
})
wrap_plots(p_stage, nrow = 1)
})
wrap_plots(p_list, ncol = 1)
p_list <- lapply(unique(vln_exp$orig.ident), function(stage) {
p_stage <- lapply(c("DR999-PMT21178", "VWA2"), function(gene){
dat <- vln_exp[vln_exp$orig.ident == stage, c(gene, 'CellType2', 'orig.ident')]
colnames(dat) <- c('Expression', 'CellType2', 'orig.ident')
ggplot(dat, aes(CellType2, Expression,  fill = CellType2, group = CellType2)) +
geom_violin() + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = gene) +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'),
axis.title = element_blank())
})
wrap_plots(p_stage, nrow = 1)
})
wrap_plots(p_list, ncol = 1)
levels(vln_exp$CellType2)
vln_exp$CellType2  <- as.character(vln_exp$CellType2 )
## vlnplot for most specific markers
vln_exp <- readRDS('supp_vln.rds')
le <- levels(vln_exp$CellType2)
vln_exp$CellType2  <- as.character(vln_exp$CellType2 )
vln_exp$CellType2 <- factor(vln_exp$CellType2, levels =le[1:12] )
save(vln_exp, 'supp_vln.rds')
saveRDS(vln_exp, 'supp_vln.rds')
## vlnplot for most specific markers
vln_exp <- readRDS('supp_vln.rds')
p_list <- lapply(unique(vln_exp$orig.ident), function(stage) {
p_stage <- lapply(c("DR999-PMT21178", "VWA2"), function(gene){
dat <- vln_exp[vln_exp$orig.ident == stage, c(gene, 'CellType2', 'orig.ident')]
colnames(dat) <- c('Expression', 'CellType2', 'orig.ident')
ggplot(dat, aes(CellType2, Expression,  fill = CellType2, group = CellType2)) +
geom_violin() + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = gene) +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'),
axis.title = element_blank())
})
wrap_plots(p_stage, nrow = 1)
})
wrap_plots(p_list, ncol = 1)
p_list <- lapply(unique(vln_exp$orig.ident), function(stage) {
p_stage <- lapply(c("DR999-PMT21178", "VWA2"), function(gene){
dat <- vln_exp[vln_exp$orig.ident == stage, c(gene, 'CellType2', 'orig.ident')]
colnames(dat) <- c('Expression', 'CellType2', 'orig.ident')
ggplot(dat, aes(CellType2, Expression,  fill = CellType2, group = CellType2)) +
geom_violin(scale = "width") + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = gene) +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'),
axis.title = element_blank())
})
wrap_plots(p_stage, nrow = 1)
})
wrap_plots(p_list, ncol = 1)
unique(vln_exp$CellType2)
## vlnplot for most specific markers
vln_exp <- readRDS('supp_vln.rds')
unique(vln_exp$CellType2)
vln_exp <- vln_exp[!(vln_exp$CellType2 == 'Delected'),]
unique(vln_exp$CellType2)
le
vln_exp$CellType2 <- as.character(vln_exp$CellType2)
vln_exp$CellType2 <- factor(vln_exp$CellType2, levels = le[1:12])
unique(vln_exp$CellType2)
saveRDS(vln_exp, 'supp_vln.rds')
p_list <- lapply(unique(vln_exp$orig.ident), function(stage) {
p_stage <- lapply(c("DR999-PMT21178", "VWA2"), function(gene){
dat <- vln_exp[vln_exp$orig.ident == stage, c(gene, 'CellType2', 'orig.ident')]
colnames(dat) <- c('Expression', 'CellType2', 'orig.ident')
ggplot(dat, aes(CellType2, Expression,  fill = CellType2, group = CellType2)) +
geom_violin(scale = "width") + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = gene) +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, vjust = .5, hjust = .5))
})
wrap_plots(p_stage, nrow = 1)
})
wrap_plots(p_list, ncol = 1)
p_stage <- lapply(c("DR999-PMT21178", "VWA2"), function(gene){
dat <- vln_exp[vln_exp$orig.ident == stage, c(gene, 'CellType2', 'orig.ident')]
colnames(dat) <- c('Expression', 'CellType2', 'orig.ident')
ggplot(dat, aes(CellType2, Expression,  fill = CellType2, group = CellType2)) +
geom_violin(scale = "width") + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = gene) +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = .5))
})
p_list <- lapply(unique(vln_exp$orig.ident), function(stage) {
p_stage <- lapply(c("DR999-PMT21178", "VWA2"), function(gene){
dat <- vln_exp[vln_exp$orig.ident == stage, c(gene, 'CellType2', 'orig.ident')]
colnames(dat) <- c('Expression', 'CellType2', 'orig.ident')
ggplot(dat, aes(CellType2, Expression,  fill = CellType2, group = CellType2)) +
geom_violin(scale = "width") + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = gene) +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = .5))
})
wrap_plots(p_stage, nrow = 1)
})
wrap_plots(p_list, ncol = 1)
p_list <- lapply(unique(vln_exp$orig.ident), function(stage) {
p_stage <- lapply(c("DR999-PMT21178", "VWA2"), function(gene){
dat <- vln_exp[vln_exp$orig.ident == stage, c(gene, 'CellType2', 'orig.ident')]
colnames(dat) <- c('Expression', 'CellType2', 'orig.ident')
ggplot(dat, aes(CellType2, Expression,  fill = CellType2, group = CellType2)) +
geom_violin(scale = "width") + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = gene) +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, vjust = .5))
})
wrap_plots(p_stage, nrow = 1)
})
wrap_plots(p_list, ncol = 1)
p_list <- lapply(unique(vln_exp$orig.ident), function(stage) {
p_stage <- lapply(c("DR999-PMT21178", "VWA2"), function(gene){
dat <- vln_exp[vln_exp$orig.ident == stage, c(gene, 'CellType2', 'orig.ident')]
colnames(dat) <- c('Expression', 'CellType2', 'orig.ident')
ggplot(dat, aes(CellType2, Expression,  fill = CellType2, group = CellType2)) +
geom_violin(scale = "width") + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = gene) +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45))
})
wrap_plots(p_stage, nrow = 1)
})
wrap_plots(p_list, ncol = 1)
p_list <- lapply(unique(vln_exp$orig.ident), function(stage) {
p_stage <- lapply(c("DR999-PMT21178", "VWA2"), function(gene){
dat <- vln_exp[vln_exp$orig.ident == stage, c(gene, 'CellType2', 'orig.ident')]
colnames(dat) <- c('Expression', 'CellType2', 'orig.ident')
ggplot(dat, aes(CellType2, Expression,  fill = CellType2, group = CellType2)) +
geom_violin(scale = "width") + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = gene) +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, vjust = .5, hjust = -0.5))
})
wrap_plots(p_stage, nrow = 1)
})
wrap_plots(p_list, ncol = 1)
stage <- 'Axolotl_ST50'
gene <- 'VWA2'
dat <- vln_exp[vln_exp$orig.ident == stage, c(gene, 'CellType2', 'orig.ident')]
colnames(dat) <- c('Expression', 'CellType2', 'orig.ident')
ggplot(dat, aes(CellType2, Expression,  fill = CellType2, group = CellType2)) +
geom_violin(scale = "width") + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = gene) +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
ggplot(dat, aes(CellType2, Expression,  fill = CellType2, group = CellType2)) +
geom_violin(scale = "area") + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = gene) +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
ggplot(dat, aes(CellType2, Expression,  fill = CellType2, group = CellType2)) +
geom_violin(scale = "count") + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = gene) +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
## vlnplot for most specific markers
vln_exp <- readRDS('supp_vln2.rds')
p_list <- lapply(unique(vln_exp$orig.ident), function(stage) {
p_stage <- lapply(c("DR999-PMT21178", "VWA2"), function(gene){
dat <- vln_exp[vln_exp$orig.ident == stage, c(gene, 'CellType2_sep', 'orig.ident')]
colnames(dat) <- c('Expression', 'CellType2_sep', 'orig.ident')
ggplot(dat, aes(CellType2, Expression,  fill = CellType2, group = CellType2)) +
geom_violin(scale = "width") + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = gene) +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
})
wrap_plots(p_stage, nrow = 1)
})
wrap_plots(p_list, ncol = 1)
## vlnplot for most specific markers
vln_exp <- readRDS('supp_vln2.rds')
p_list <- lapply(unique(vln_exp$orig.ident), function(stage) {
p_stage <- lapply(c("DR999-PMT21178", "VWA2"), function(gene){
dat <- vln_exp[vln_exp$orig.ident == stage, c(gene, 'CellType2_sep', 'orig.ident')]
colnames(dat) <- c('Expression', 'CellType2_sep', 'orig.ident')
ggplot(dat, aes(CellType2_sep, Expression,  fill = CellType2_sep, group = CellType2_sep)) +
geom_violin(scale = "width") + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = gene) +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
})
wrap_plots(p_stage, nrow = 1)
})
wrap_plots(p_list, ncol = 1)
## vlnplot for most specific markers
vln_exp <- readRDS('supp_vln.rds')
p_list <- lapply(unique(vln_exp$orig.ident), function(stage) {
p_stage <- lapply(c("DR999-PMT21178", "VWA2"), function(gene){
dat <- vln_exp[vln_exp$orig.ident == stage, c(gene, 'CellType2', 'orig.ident')]
colnames(dat) <- c('Expression', 'CellType2', 'orig.ident')
ggplot(dat, aes(CellType2, Expression,  fill = CellType2, group = CellType2)) +
geom_violin(scale = "width") + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = gene) +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
})
wrap_plots(p_stage, nrow = 1)
})
wrap_plots(p_list, ncol = 1)
## vlnplot for most specific markers
vln_exp <- readRDS('supp_vln.rds')
p_list <- lapply(unique(vln_exp$orig.ident), function(stage) {
p_stage <- lapply(c("DR999-PMT21178", "VWA2"), function(gene){
dat <- vln_exp[vln_exp$orig.ident == stage, c(gene, 'CellType2', 'orig.ident')]
colnames(dat) <- c('Expression', 'CellType2', 'orig.ident')
ggplot(dat, aes(CellType2, Expression,  fill = CellType2, group = CellType2)) +
geom_violin(scale = "area") + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = gene) +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
})
wrap_plots(p_stage, nrow = 1)
})
wrap_plots(p_list, ncol = 1)
## vlnplot for most specific markers
vln_exp <- readRDS('supp_vln.rds')
p_list <- lapply(unique(vln_exp$orig.ident), function(stage) {
p_stage <- lapply(c("DR999-PMT21178", "VWA2"), function(gene){
dat <- vln_exp[vln_exp$orig.ident == stage, c(gene, 'CellType2', 'orig.ident')]
colnames(dat) <- c('Expression', 'CellType2', 'orig.ident')
ggplot(dat, aes(CellType2, Expression,  fill = CellType2, group = CellType2)) +
geom_violin(scale = "count") + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = gene) +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
})
wrap_plots(p_stage, nrow = 1)
})
wrap_plots(p_list, ncol = 1)
VlnPlot
ExIPlot
p_list <- lapply(unique(vln_exp$orig.ident), function(stage) {
p_stage <- lapply(c("DR999-PMT21178", "VWA2"), function(gene){
dat <- vln_exp[vln_exp$orig.ident == stage, c(gene, 'CellType2', 'orig.ident')]
colnames(dat) <- c('Expression', 'CellType2', 'orig.ident')
noise <- rnorm(n = length(x = dat[, "Expression"])) / 100000
dat$Expression <- dat$Expression  + noise
ggplot(dat, aes(CellType2, Expression,  fill = CellType2, group = CellType2)) +
geom_violin(scale = "width") + theme_classic() +
scale_fill_manual(values = cols2) +
labs(title = gene) +
theme(legend.position = 'none',
plot.title = element_text(hjust = .5, face = 'bold'),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
})
wrap_plots(p_stage, nrow = 1)
})
wrap_plots(p_list, ncol = 1)
getwd()
markers <- read.table('AER_vs_AEC_full.txt')
source("../0.scripts/vocalno_plot.r")
label_top <- subset(markers, p_val_adj < 0.05) %>%
group_by(cluster) %>%
top_n(10, abs(avg_log2FC))
label_top <- c(label_top$gene, "MMP13.1")
p <- volcano_plot(markers,
logFC_threshold = 0.25, padj_threshold = 0.05,
label_up = "AER", label_down = "AEC", label_no = "Not Sig.",
col_up = "#BC3C28", col_down = "#0072B5", col_no = "lightgrey",
title = "AER vs AEC",
xtitle = "log(FoldChange)", ytitle = "-log10(Adjust P-value)",
ytext_size = 10, xtext_size = 10, ytitle_size = 10, xtitle_size = 10,
label_top = label_top, label_size = 4, dot_size = 1, box.padding = 0.5,
return_p = TRUE
)
p
library(ggplot2)
meta_df <- readRDS('supp_S21.rds')
p1 <- ggplot(meta_df, aes(UMAP_1, UMAP_2, color = comp)) + geom_point() +
theme_void() + scale_color_manual(values = c("AER" = "#a20559", "CT" = "#1a5e82", "CT-AER" = "#1a5e82"))
p1
head(meta_df)
colnames(meta_df)
colnames(meta_df)[4] <- 'MDK'
saveRDS(meta_df, 'supp_S21.rds')
p1 <- ggplot(meta_df, aes(UMAP_1, UMAP_2, color = VWDE)) + geom_point() +
theme_void() + scale_color_gradient(low = 'lightgrey', high = '#B2182B')
p2 <- ggplot(meta_df, aes(UMAP_1, UMAP_2, color = MDK)) + geom_point() +
theme_void() + scale_color_gradient(low = 'lightgrey', high = '#B2182B')
p3 <- ggplot(meta_df, aes(UMAP_1, UMAP_2, color = KRT18)) + geom_point() +
theme_void() + scale_color_gradient(low = 'lightgrey', high = '#B2182B')
wrap_plots(p1, p2, p3, ncol = 2)
levels(meta_df$dpa)
p_list <- lapply(levels(meta_df$dpa), function(x) {
dat <- meta_df
dat$col <- as.character(dat$dpa)
dat$col[dat$dpa != x]  <- 'Unselected'
dat$col <- factor(dat$col, levels = c(x, 'Unselected'))
color <-  c('#DE2D26',"lightgrey")
names(color) <- c(x, 'Unselected')
ggplot(dat[order(dat$col, decreasing = TRUE),], aes(UMAP_1, UMAP_2, color = col)) +
geom_point() + theme_classic() + scale_color_manual(values = color) +
labs(title = x) +
theme(plot.title = element_text(hjust = 0.5, size = 10),
legend.position = 'none') + coord_fixed()
})
wrap_plots(p_list)
library(ggplot2)
library(patchwork)
source('../0.scripts/dotplot_fromTOM.r')
meta_df <- readRDS('supp_S21.rds')
load('supp_dotplot.rdata')
p1 <- ggplot(meta_df, aes(UMAP_1, UMAP_2, color = comp)) + geom_point() +
theme_void() + scale_color_manual(values = c("AER" = "#a20559", "CT" = "#1a5e82", "CT-AER" = "#669017"))
p2 <- dotplot(countn,
norm = "max",
condition = condition,
title = 'Signalling ligands',
collow = "lightgrey", colhigh = "red3",
aspect.ratio = 8, ySize = 8, xSize = 8, dot.scale = 3.5,
return = TRUE, plot = FALSE
)
p1 / p2
